#!/usr/bin/env ruby

require "fileutils"
require "mini_magick"
require_relative "../lib/picture"

THREADS = 4
public_dir = File.expand_path(ARGV[0] || Picture::PUBLIC_DIR)
new_size = ARGV[1] || "400x400>"

Picture::EXTENSIONS.each do |ext|
  glob_prefix = File.join(public_dir, "**")
  FileUtils.rm_f(Dir[File.join(glob_prefix, "*_thumb.#{ext}")])

  queue = Dir[File.join(glob_prefix, "*.#{ext}")].inject(Queue.new) { |q, path|
            q << path
          }

  (1..[queue.size, THREADS].min).map {
    Thread.new do
      img_src_path = begin
                       queue.pop(true)
                     rescue ThreadError; end

      while img_src_path
        img_bname = File.basename(img_src_path, File.extname(img_src_path))
        img_dest_path = File.join(File.dirname(img_src_path),
                                  "#{img_bname}_thumb.#{ext}")
        unless File.exist?(img_dest_path)
          image = MiniMagick::Image.open(img_src_path)
          image.resize(new_size)
          image.write(img_dest_path)
        end

        img_src_path = begin
                         queue.pop(true)
                       rescue ThreadError; end
      end
    end
  }.each(&:join)
end
